// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  password   String
  portfolios Portfolio[]
  roles      String[]    @default(["user"])
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  balance    Decimal     @default(0.00) @db.Decimal(10, 2)
  Trade      Trade[]
}

model Portfolio {
  id        String    @id @default(uuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  shares    Share[]
  trades    Trade[]
  quantity  Int       @default(0)
  deletedAt DateTime?
}

model Share {
  id          String     @id @default(uuid())
  symbol      String     @unique
  price       Float      @default(0.00) 
  trades      Trade[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  portfolio   Portfolio? @relation(fields: [portfolioId], references: [id])
  portfolioId String?
}

model Trade {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  shareId     String
  share       Share     @relation(fields: [shareId], references: [id])
  type        TradeType
  quantity    Int
  price       Float
  createdAt   DateTime  @default(now())

  @@index([userId], name: "userId")
  @@index([portfolioId], name: "portfolioId")
  @@index([shareId], name: "shareId")
  @@index([createdAt], name: "createdAt")
  @@index([userId, portfolioId, shareId], name: "userId_portfolioId_shareId")
  @@index([userId, shareId], name: "userId_shareId")
  @@map("Trade")
}

enum TradeType {
  BUY
  SELL
}
